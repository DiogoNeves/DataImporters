# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/11_annotation.ipynb (unless otherwise specified).

__all__ = ['create_annotations', 'load_annotations', 'apply_annotations', 'delete_row']

# Cell

import pandas as pd
from collections import namedtuple

# Internal Cell

COLUMNS = ["filename", "category", "label", "extra", "source", "version"]
DELETE_KEYWORD = "<delete>"

Annotation = namedtuple("Annotation", "replaces deletes")

# Cell

def create_annotations(rows: list[pd.Series] = None) -> pd.DataFrame:
    return pd.DataFrame(rows, columns=COLUMNS)

def load_annotations(annotation_path: str) -> Annotation:
    """Loads the annotations from a csv file."""
    annotations = pd.read_csv(annotation_path)
    return Annotation(annotations.loc[annotations["category"] != DELETE_KEYWORD],
                      annotations.loc[annotations["category"] == DELETE_KEYWORD])

def apply_annotations(annotations: Annotation, metadata: pd.DataFrame) -> pd.DataFrame:
    """Applies the annotations to the metadata (Assumes no duplicates!!)."""
    replaced = metadata.loc[~metadata["filename"].isin(annotations.deletes["filename"])]
    replaced = pd.concat([replaced, annotations.replaces])
    return replaced.drop_duplicates(subset=["filename"], keep="last")

# Cell

def delete_row(row: pd.Series) -> pd.Series:
    """Deletes a row from the annotations DataFrame."""
    row = row.copy()
    row[1:5] = DELETE_KEYWORD
    row[5] = -1
    return row